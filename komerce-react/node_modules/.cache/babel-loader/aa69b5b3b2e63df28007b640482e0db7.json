{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Komerce-Ecomerce-main\\\\komerce-react\\\\src\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AuthContext from \"../context/authContext\";\nimport * as ROUTES from \"../constants/routes\";\nimport \"../css/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const history = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // const [error, setError] = useState('');\n\n  const isInvalid = email === \"\" && password === \"\";\n  const authCtx = useContext(AuthContext);\n\n  const loginHandler = async event => {\n    event.preventDefault(); // console.log(email, password);\n\n    await fetch(\"http://localhost:3000/users/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => {\n      // console.log(res)\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          // console.log(data)\n          throw new Error(data.status);\n        });\n      }\n    }).then(data => {\n      console.log(data.data);\n      console.log(data.sessionId); // console.log(data.session.user.cartId)\n\n      authCtx.onLogin(data.data);\n      authCtx.onSession(data.sessionId);\n      authCtx.onCart(data.data.userData.cartId); // authCtx.onLogin(data.token)\n      // authCtx.onLogin(data.sessionId, data.session.isAuth, data.userId, data.cartId, data.role)\n      // authCtx.onLogin(data.sessionId, data.session.isAuth, data.data.userId, data.session.user.cart_id, data.data.role)\n\n      if (data.data.userData.role === \"admin\") {\n        history(ROUTES.PRODUCTLIST);\n      } else {\n        history(ROUTES.COLLECTIONS);\n      }\n    }).catch(err => {\n      setPassword(\"\");\n\n      if (isInvalid) {\n        toast.error(\"Please provide email & password!\", {\n          position: toast.POSITION.TOP_CENTER\n        });\n      } else {\n        toast.error(err.message, {\n          position: toast.POSITION.TOP_CENTER\n        });\n      }\n    }); // await fetch(`http://localhost:3000/mySessions`,{\n    //     method: 'PATCH',\n    //     body: JSON.stringify({\n    //         userId: sessionData.userId,\n    //         cartId: sessionData.cartId,\n    //         user_role: sessionData.user_role\n    //     })\n    // })\n  };\n\n  useEffect(() => {\n    document.title = \"Login\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container sign-up-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        onSubmit: loginHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"\",\n            value: email,\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return setEmail(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setPassword(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button--hollow justify-end inline-block\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"HNesqdTEF1DEx9stY8SM0JsH+DQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/Komerce-Ecomerce-main/komerce-react/src/pages/login.js"],"names":["React","useContext","useEffect","useState","useNavigate","toast","AuthContext","ROUTES","Login","history","email","setEmail","password","setPassword","isInvalid","authCtx","loginHandler","event","preventDefault","fetch","method","credentials","headers","Accept","body","JSON","stringify","then","res","ok","json","data","Error","status","console","log","sessionId","onLogin","onSession","onCart","userData","cartId","role","PRODUCTLIST","COLLECTIONS","catch","err","error","position","POSITION","TOP_CENTER","message","document","title","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport AuthContext from \"../context/authContext\";\nimport * as ROUTES from \"../constants/routes\";\nimport \"../css/style.css\";\n\nexport default function Login() {\n  const history = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const [error, setError] = useState('');\n  const isInvalid = email === \"\" && password === \"\";\n\n  const authCtx = useContext(AuthContext);\n\n  const loginHandler = async (event) => {\n    event.preventDefault();\n    // console.log(email, password);\n\n    await fetch(\"http://localhost:3000/users/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    })\n      .then((res) => {\n        // console.log(res)\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            // console.log(data)\n            throw new Error(data.status);\n          });\n        }\n      })\n      .then((data) => {\n        console.log(data.data);\n        console.log(data.sessionId);\n        // console.log(data.session.user.cartId)\n        authCtx.onLogin(data.data);\n        authCtx.onSession(data.sessionId);\n        authCtx.onCart(data.data.userData.cartId);\n        // authCtx.onLogin(data.token)\n        // authCtx.onLogin(data.sessionId, data.session.isAuth, data.userId, data.cartId, data.role)\n        // authCtx.onLogin(data.sessionId, data.session.isAuth, data.data.userId, data.session.user.cart_id, data.data.role)\n        if (data.data.userData.role === \"admin\") {\n          history(ROUTES.PRODUCTLIST);\n        } else {\n          history(ROUTES.COLLECTIONS);\n        }\n      })\n      .catch((err) => {\n        setPassword(\"\");\n        if (isInvalid) {\n          toast.error(\"Please provide email & password!\", {\n            position: toast.POSITION.TOP_CENTER,\n          });\n        } else {\n          toast.error(err.message, { position: toast.POSITION.TOP_CENTER });\n        }\n      });\n\n    // await fetch(`http://localhost:3000/mySessions`,{\n    //     method: 'PATCH',\n    //     body: JSON.stringify({\n    //         userId: sessionData.userId,\n    //         cartId: sessionData.cartId,\n    //         user_role: sessionData.user_role\n    //     })\n    // })\n  };\n\n  useEffect(() => {\n    document.title = \"Login\";\n  });\n\n  return (\n    <section>\n      <div className=\"form-container sign-up-container\">\n        <form action=\"#\" onSubmit={loginHandler}>\n          <h1>Login</h1>\n          <div className=\"form-control\">\n            <label htmlFor=\"name\">Email Address</label>\n            <input\n              type=\"email\"\n              placeholder=\"\"\n              value={email}\n              onChange={({ target }) => setEmail(target.value)}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"name\">Enter Password</label>\n            <input\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n          </div>\n          {/* {error && <p className=\"error-message\">{error}</p>} */}\n          {/* <ToastContainer className=\"toaster-style\"/> */}\n          <button className=\"button button--hollow justify-end inline-block\">\n            Login\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}