{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Komerce-Ecomerce-main\\\\komerce-react\\\\src\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AuthContext from '../context/authContext';\nimport * as ROUTES from '../constants/routes';\nimport '../css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const history = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // const [error, setError] = useState('');\n\n  const isInvalid = email === '' && password === '';\n  const authCtx = useContext(AuthContext);\n\n  const loginHandler = async event => {\n    event.preventDefault(); // console.log(email, password);\n\n    await fetch('http://localhost:3000/users/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => {\n      // console.log(res)\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          // console.log(data)\n          throw new Error(data.status);\n        });\n      }\n    }).then(data => {\n      console.log(data.data);\n      console.log(data.sessionId); // console.log(data.session.user.cartId)\n\n      authCtx.onLogin(data.data);\n      authCtx.onSession(data.sessionId);\n      authCtx.onCart(data.data.userData.cartId); // authCtx.onLogin(data.token)\n      // authCtx.onLogin(data.sessionId, data.session.isAuth, data.userId, data.cartId, data.role)\n      // authCtx.onLogin(data.sessionId, data.session.isAuth, data.data.userId, data.session.user.cart_id, data.data.role)\n\n      if (data.data.userData.role === 'admin') {\n        history(ROUTES.PRODUCTLIST);\n      } else {\n        history(ROUTES.COLLECTIONS);\n      }\n    }).catch(err => {\n      setPassword('');\n\n      if (isInvalid) {\n        toast.error(\"Please provide email & password!\", {\n          position: toast.POSITION.TOP_CENTER\n        });\n      } else {\n        toast.error(err.message, {\n          position: toast.POSITION.TOP_CENTER\n        });\n      }\n    }); // await fetch(`http://localhost:3000/mySessions`,{ \n    //     method: 'PATCH', \n    //     body: JSON.stringify({\n    //         userId: sessionData.userId, \n    //         cartId: sessionData.cartId, \n    //         user_role: sessionData.user_role\n    //     })\n    // })\n  };\n\n  useEffect(() => {\n    document.title = \"Login\";\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container sign-up-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        onSubmit: loginHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"\",\n            value: email,\n            onChange: _ref => {\n              let {\n                target\n              } = _ref;\n              return setEmail(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"\",\n            value: password,\n            onChange: _ref2 => {\n              let {\n                target\n              } = _ref2;\n              return setPassword(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button--hollow justify-end inline-block\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"dobkg3SBXDk+V7Mtk62WNbDE5Lc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Admin/Downloads/Komerce-Ecomerce-main/komerce-react/src/pages/login.js"],"names":["React","useContext","useEffect","useState","useNavigate","toast","AuthContext","ROUTES","Login","history","email","setEmail","password","setPassword","isInvalid","authCtx","loginHandler","event","preventDefault","fetch","method","credentials","headers","body","JSON","stringify","then","res","ok","json","data","Error","status","console","log","sessionId","onLogin","onSession","onCart","userData","cartId","role","PRODUCTLIST","COLLECTIONS","catch","err","error","position","POSITION","TOP_CENTER","message","document","title","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport AuthContext from '../context/authContext';\nimport * as ROUTES from '../constants/routes';\nimport '../css/style.css';\n\nexport default function Login(){\n    const history = useNavigate();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // const [error, setError] = useState('');\n    const isInvalid = email === '' && password === '';\n\n    const authCtx = useContext(AuthContext);\n\n    const loginHandler = async (event) => {\n        event.preventDefault();\n        // console.log(email, password);\n\n        await fetch('http://localhost:3000/users/login', {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Accept' : 'application/json',\n                'Content-Type' : 'application/json',\n            },\n            body: JSON.stringify({\n                email: email,\n                password: password\n            })\n        }).then(res => {\n            // console.log(res)\n            if(res.ok){\n                return res.json();\n            }else{\n                return res.json().then((data) => {\n                    // console.log(data)\n                    throw new Error(data.status);\n                });\n            }\n        }).then((data) => {\n            console.log(data.data)\n            console.log(data.sessionId)\n            // console.log(data.session.user.cartId)\n            authCtx.onLogin(data.data)\n            authCtx.onSession(data.sessionId)\n            authCtx.onCart(data.data.userData.cartId)\n            // authCtx.onLogin(data.token)\n            // authCtx.onLogin(data.sessionId, data.session.isAuth, data.userId, data.cartId, data.role)\n            // authCtx.onLogin(data.sessionId, data.session.isAuth, data.data.userId, data.session.user.cart_id, data.data.role)\n            if(data.data.userData.role === 'admin'){\n                history(ROUTES.PRODUCTLIST);\n            }else{\n                history(ROUTES.COLLECTIONS);\n            }\n        }).catch((err) => {\n            setPassword('');\n            if(isInvalid){\n                toast.error(\"Please provide email & password!\", {position: toast.POSITION.TOP_CENTER})\n            }else{\n                toast.error(err.message, {position: toast.POSITION.TOP_CENTER})\n            }\n        })\n\n        // await fetch(`http://localhost:3000/mySessions`,{ \n        //     method: 'PATCH', \n        //     body: JSON.stringify({\n        //         userId: sessionData.userId, \n        //         cartId: sessionData.cartId, \n        //         user_role: sessionData.user_role\n        //     })\n        // })\n    }\n\n    useEffect(() => {\n        document.title = \"Login\";\n    });\n\n    return(\n        <section>\n                <div className=\"form-container sign-up-container\">\n                    <form action=\"#\" onSubmit={loginHandler}>\n                        <h1>Login</h1>\n                        <div className=\"form-control\">\n                            <label htmlFor=\"name\">Email Address</label>\n                            <input \n                                type=\"email\" \n                                placeholder=\"\" \n                                value={email}\n                                onChange={({target}) => setEmail(target.value)}\n                            />\n                        </div>\n                        <div className=\"form-control\">\n                            <label htmlFor=\"name\">Enter Password</label>\n                            <input \n                                type=\"password\" \n                                placeholder=\"\" \n                                value={password}\n                                onChange={({target}) => setPassword(target.value)}\n                            />\n                        </div>\n                        {/* {error && <p className=\"error-message\">{error}</p>} */}\n                        {/* <ToastContainer className=\"toaster-style\"/> */}\n                        <button className=\"button button--hollow justify-end inline-block\">Login</button>\n                    </form>\n                </div>\n         </section>\n    )\n}"]},"metadata":{},"sourceType":"module"}